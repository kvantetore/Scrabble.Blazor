@page "/game/{ParameterId}"

<h1>Scrabble</h1>

@if (@Game != null)
{
    <div class="game-area">
        <div class="game-area--board">
            <div class="board" tabindex="0" @onkeydown="@OnKeyDown" @onkeypress="@OnKeyPress">
                @for (var i = 0; i < Tiles.GetLength(0); i++) 
                {
                    <div class="board--row">
                        @for (var j = 0; j < Tiles.GetLength(1); j++)
                        {
                            var (k, l) = (i, j);
                            var tile = Tiles[k, l];

                            <div class="board--cell @GetTileTypeCssClass(tile.TileType) @GetSelectedCssClass(k, l)" @onclick="@(() => OnTileClick(k, l))">
                                @if (IsFilled(tile)) {
                                    <div class="tile @GetLetterScoredCssClass(tile)">
                                        @(tile.CurrentLetter?.ToUpper())                            
                                    </div>
                                }                    
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <div class="game-area--action">
            <div>
                Next player: @(GetNextPlayer()?.Name)
            </div>
            <div>
                Score: @GetCurrentScore()
            </div>

            <div>
                Words:
                <ul>
                    @foreach (var word in GetCurrentWords())
                    {
                        <li>@(string.Join("", word.Select(t => t.CurrentLetter)))</li>
                    }
                </ul>

            </div>

            <div>
                @foreach (var player in Players)
                {
                    <button type="button" @onclick="@(() => ScoreTiles(player))">Score for @player.Name</button>
                }
            </div>

            <table class="table">
                <tr>
                    <td>Round</td>
                    @foreach (var player in Players)
                    {
                        <th>@player.Name</th>
                    }
                </tr>
                <tr>
                    <td>Total</td>
                    @foreach (var player in Players)
                    {
                        <th class="text-right">@GetPlayerScore(player)</th>
                    }
                </tr>
                @foreach (var round in Game.Rounds.OrderBy(r => r.RoundNumber))
                {
                    <tr>
                        <td>@(round.RoundNumber + 1)</td>
                        @foreach (var player in Players) 
                        {
                            var playerRound = round.PlayerRounds.FirstOrDefault(pr => pr.Player == player);
                            <td class="text-right">
                                <text>@(playerRound?.Score)</text>
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
    </div>
}

@code {
    protected string GetSelectedCssClass(int i, int j) {
        var (si, sj) = SelectedIndex;
        return (si == i && sj == j) ? "board--cell__selected" : "";
    }

    protected string GetTileTypeCssClass(TileType tileType) {
        return $"board--cell__{tileType:g}";
    }

    protected string GetLetterScoredCssClass(Tile tile) {
        return tile.Scored ? "tile-scored" : "";
    }
}